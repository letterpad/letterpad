name: PR Checks
on:
  push:
    branches-ignore:
      - "master"
env:
  CYPRESS_CACHE_FOLDER: /home/runner/work/letterpad/letterpad/apps/admin/cypress/cache

jobs:
  # job_one:
  #   name: API Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 2
    
  #     - name: Turbo Cache
  #       id: turbo-cache
  #       uses: actions/cache@v2
  #       with:
  #         path: .turbo
  #         key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
  #         restore-keys: |
  #           turbo-${{ github.job }}-${{ github.ref_name }}-

  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 18

  #     - name: Cache node_modules
  #       uses: actions/cache@v2
  #       id: yarn-dep-cache
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: "**/node_modules"
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-
      
  #     - name: Install Yarn
  #       run: npm install -g yarn

  #     - name: Yarn install deps
  #       run: |
  #         yarn install --frozen-lockfile 
  #       if: steps.yarn-dep-cache.outputs.cache-hit != 'true'

  #     - name: Create .env file
  #       run: mv apps/admin/.env.sample apps/admin/.env

  #     - name: Graphql Codegen
  #       run: yarn codegen

  #     - name: Generate Prisma Client
  #       working-directory: apps/admin
  #       run: npx prisma generate --schema prisma/sqlite/schema.prisma
  #       env:
  #         DATABASE_URL: "file:data/test_1.sqlite"

  #     - name: Test GraphQL API
  #       run: yarn run test
  #       env:
  #         NODE_ENV: test
  job_two:
    name: Cypress Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
     
      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 18

      # - name: Cache node_modules
      #   uses: actions/cache@v2
      #   id: yarn-dep-cache
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: "**/node_modules"
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      
      - name: Cache Cypress Binary
        uses: actions/cache@v2
        env:
          cache-name: cache-cypress
        with:
          path: "/home/runner/work/letterpad/letterpad/apps/admin/cypress/cache"
          key: ${{ runner.os }}-cypress
          # key: ${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cypress-${{ env.cache-name }}-
            ${{ runner.os }}-cypress-
            ${{ runner.os }}-

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # - run: |
      #     node_modules/cypress/bin/cypress install

      - name: Create .env file
        run: mv apps/admin/.env.sample apps/admin/.env

      - name: Bun install deps
        run: bun install
        env:
          DATABASE_URL: "file:data/test_3.sqlite"

      - name: Generate Prisma Client
        working-directory: apps/admin
        run: npx prisma generate --schema prisma/sqlite/schema.prisma
        env:
          DATABASE_URL: "file:data/test_3.sqlite"

      - name: Run Build
        run: bun run build

      - name: Run Cypress
        run: |
          node_modules/cypress/bin/cypress install
          bun run e2e:ci
        env:
          DATABASE_URL: "file:data/test_3.sqlite"
          ROOT_URL: "http://localhost:3000"
          NEXTAUTH_URL: "http://localhost:3000/api/auth"
          SECRET_KEY: "some-secret"
          NODE_ENV: "test"
          RECAPTCHA_KEY_CLIENT: "6Lf3a9QjAAAAALIzxbDw5MX9-Mu_ZjH8NLzRxAAc" # test key
          RECAPTCHA_KEY_SERVER: "6Lf3a9QjAAAAAKwvGzcmUTJNaEcnxNqu7hU0giDI" # test key