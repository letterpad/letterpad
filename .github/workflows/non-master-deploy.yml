name: PR Checks
on:
  push:
    branches-ignore:
      - "master"
env:
  CYPRESS_CACHE_FOLDER: cypress/cache

jobs:
  job_one:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-dep-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Cypress Binary
        uses: actions/cache@v2
        with:
          path: "**/cypress/cache"
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}

      - name: Install Yarn
        run: npm install -g yarn

      - name: Yarn install deps
        run: |
          yarn install --frozen-lockfile 
        if: steps.yarn-dep-cache.outputs.cache-hit != 'true'

      - name: Create .env file
        run: mv apps/admin/.env.sample apps/admin/.env

      - run: |
          apps/admin/node_modules/cypress/bin/cypress install

      - name: Graphql Codegen
        run: yarn codegen

      - name: Generate Prisma Client
        working-directory: apps/admin
        run: npx prisma generate --schema prisma/sqlite/schema.prisma
        env:
          DATABASE_URL: "file:data/test.sqlite"

      - name: Type check
        run: yarn typecheck

      - name: Test GraphQL API
        run: yarn run test
        env:
          NODE_ENV: test

      - name: Run Build
        run: yarn run build

      - name: Run Cypress
        run: yarn e2e:ci
        env:
          DATABASE_URL: "file:../data/test.sqlite"
          ROOT_URL: "http://localhost:3000/admin"
          NEXTAUTH_URL: "http://localhost:3000/admin/api/auth"
          SECRET_KEY: "some-secret"
