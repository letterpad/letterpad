type Domain {
  id: Int!
  name: String!
  mapped: Boolean
  ssl: Boolean
}

type DomainNotFound implements LetterpadError {
  message: String!
}

type DomainError implements LetterpadError {
  message: String!
}

input InputDomain {
  id: Int!
  name: String
  mapped: Boolean
  ssl: Boolean
}

union UpdateDomainResponse = Domain | DomainError
union CreateDomainResponse = Domain | DomainError
union DomainResponse = Domain | DomainNotFound

type Query {
  domain: DomainResponse!
}

type Mutation {
  updateDomain(data: InputDomain!): UpdateDomainResponse!
  createDomain(name: String!): CreateDomainResponse!
}
