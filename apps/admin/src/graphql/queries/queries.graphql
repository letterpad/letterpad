# import './partial.graphql'

query Tag($slug: String!) {
  tag(slug: $slug) {
    __typename
    ... on TagResponse {
      ... on Tag {
        name
        slug
        type
        id
      }
      ... on Exception {
        message
      }
    }
  }
}

query Post($filters: PostFilters) {
  post(filters: $filters) {
    __typename
    ... on Post {
      __typename
      ...PostWithAuthorAndTags
    }

    ... on UnAuthorized {
      __typename
      message
    }

    ... on NotFound {
      __typename
      message
    }
  }
}

query Posts($filters: PostsFilters) {
  posts(filters: $filters) {
    __typename
    ... on PostsNode {
      count
      rows {
        ...Partial
        author {
          ... on Author {
            name
            social {
              github
              twitter
              instagram
              facebook
              linkedin
            }
            bio
            occupation
            company_name
          }
        }
        tags {
          ... on TagsNode {
            rows {
              name
              slug
            }
          }
        }
      }
    }

    ... on UnAuthorized {
      __typename
      message
    }
  }
}

query Media($filters: MediaFilters) {
  media(filters: $filters) {
    ... on MediaNode {
      __typename
      count
      rows {
        id
        url
        authorId
        createdAt
        name
        description
        width
        height
      }
    }
  }
}

query Subscribers($author_id: Int) {
  subscribers(author_id: $author_id) {
    count
    rows {
      id
      email
      verified
      createdAt
    }
  }
}

query Subscriber($subscriber_id: Int) {
  subscriber(subscriber_id: $subscriber_id) {
    ... on Subscriber {
      id
      email
      verified
      createdAt
    }
    ... on SubscriberError {
      message
    }
  }
}

query Email($template_id: String) {
  email(template_id: $template_id) {
    ... on Email {
      template_id
      body
      subject
    }
    ... on EmailError {
      message
    }
  }
}

query Emails {
  emails {
    template_id
    body
    subject
  }
}

query Me {
  me {
    __typename
    ... on Author {
      ...MeFragment
      __typename
    }
    ... on NotFound {
      message
      __typename
    }
  }
}

query Tags($filters: TagsFilters) {
  tags(filters: $filters) {
    __typename
    ... on TagsNode {
      rows {
        name
        slug
        type
        id
        posts {
          __typename
          ... on PostsNode {
            count
            rows {
              id
            }
          }
        }
      }
    }
    ... on UnAuthorized {
      __typename
      message
    }
  }
}

query Stats {
  stats {
    __typename
    ... on Stats {
      posts {
        published
        drafts
        trashed
      }
      pages {
        published
        drafts
        trashed
      }
      tags
      media
    }

    ... on StatsError {
      message
    }
  }
}

query Sitemaps {
  sitemaps {
    ... on SiteMapList {
      rows {
        route
        priority
        lastmod
      }
    }
    ... on SiteMapError {
      message
    }
    __typename
  }
}

query settings {
  settings {
    __typename
    ... on Setting {
      ...SettingsFragment
    }
    ... on NotFound {
      message
    }
    ... on UnAuthorized {
      message
    }
  }
}

query domain {
  domain {
    __typename
    ... on Domain {
      name
      mapped
      ssl
      verification {
        type
        domain
        value
        reason
      }
      configured
    }
    ... on DomainNotFound {
      message
    }
  }
}

query domainCerts {
  certs
}

query IsFollowing($username: String!) {
  isFollowing(username: $username) {
    ok
    following
    message
  }
}

query AboutStats($username: String!) {
  aboutStats(username: $username) {
    stats {
      postCount
      followerCount
      followingCount
    }
    ok
  }
}

query homeQuery {
  me {
    __typename
    ... on Author {
      ...MeFragment
    }
    ... on NotFound {
      message
    }
  }
  settings {
    __typename
    ... on Setting {
      id
      ...SettingsFragment
    }
    ... on NotFound {
      message
    }
    ... on UnAuthorized {
      message
    }
  }
  stats {
    __typename
    ... on Stats {
      posts {
        published
        drafts
        trashed
      }
      pages {
        published
        drafts
        trashed
      }
      tags
      media
    }

    ... on StatsError {
      message
    }
  }
}

query Notification {
  notifications {
    __typename
    ... on NotificationNode {
      count
      rows {
        ... on Notification {
          notification_id
          author_id
          createdAt
          meta {
            ... on PostLikeMeta {
              post_id
              post_title
              post_slug
              author_name
              author_avatar
              __typename
            }
            ... on PostNewMeta {
              post_id
              post_slug
              author_name
              author_avatar
              author_username
               __typename
            }
            ... on FollowerNewMeta {
              follower_id
              follower_name
              follower_username
              follower_avatar
               __typename
            }
            ... on SubscriberNewMeta{
              subscriber_email
               __typename
            }
            ... on SystemMeta{
              message
              url
              slug
               __typename
            }
          }
        }
      }
    }
  }
}

query LetterpadLatestPosts($cursor: Int) {
  letterpadLatestPosts(cursor: $cursor) {
    __typename
    ... on PostsNode {
      count
      rows {
        id
        title
        slug
        sub_title
        createdAt
        publishedAt
        excerpt
        cover_image {
          src
          width
          height
        }
        stats {
          reading_time
        }
        author {
          ... on Author {
            name
            username
            avatar
            __typename
          }
        }
        tags {
          ... on TagsNode {
            rows {
              name
              slug
            }
          }
        }
      }
    }
  }
}

query GetCategories {
  categories {
    rows {
      count
      name
      slug
    }
    ok
    message
  }
}